@using QualityExperienceUI.Data.Validators


@* Form *@
<Form @ref="form"
Model="@model"
ValidateOnChange="true"
Size="FormSize.Small">


    <FormItem Label="Question name" Rules="@(FormValidationRules.textRules)">
        <Input @bind-Value="model.Name" />
    </FormItem>

    <FormItem Label="Description" Rules="@(FormValidationRules.textRules)">
        <Input @bind-Value="model.Description" />
    </FormItem>

</Form>


@code {
    [Parameter] public int templateId { get; set; }

    private PostQuestionDTO model { get; set; } = new PostQuestionDTO();
    private Form<PostQuestionDTO> form = new();


    // Methods
    protected override void OnInitialized()
    {
        model.TemplateId = templateId;

        model.Name = "";
        model.Description = "";

        model.GroupId = null;
        model.SubGroupId = 0;
        model.AuthorId = 1;
        model.IndicatorId = null;
        model.Order = 1;
        model.CriticalQuestionValue = 0;
        model.Type = "1";
        model.Status = "1";
        model.Critical = "2";
        model.CalculationType = "1";
        model.GlobalWeight = 0;
        model.IndicatorWeight = 0;
        model.QuestionEvaluationControlId = null;

        base.OnInitialized();
    }


    public (bool formValidate, PostQuestionDTO question) ValidateAndGetData()
    {
        if (form != null)
        {
            if (form.Validate())
            {
                return (true, model);
            }
        }

        return (false, model);
    }


    public void ClearForm()
    {
        form.Reset();
    }
}
